       title: "OSCAL System Security Plan"
     package: "https://example.gov/ns/oscal/0.0.1/ssp/"
  namespaces: [["", "https://example.gov/ns/oscal/0.0.1/component-definition/"], ["", "https://example.gov/ns/oscal/0.0.1/control-common/"], ["", "https://example.gov/ns/oscal/0.0.1/implementation-common/"], ["", "https://example.gov/ns/oscal/0.0.1/metadata/"]]
     exports: ["System-security-plan", "By-component"]
      config: {"$MaxString": 1000, "$TypeName": "^[$A-Z][-.$A-Za-z0-9]{0,96}$", "$FieldName": "^[$a-z][-_$A-Za-z0-9]{0,63}$", "$NSID": "^([A-Za-z][-A-Za-z0-9]{0,31})?$"}

System-security-plan = Record                      // A system security plan, such as those described in NIST SP 800-18.
   1 uuid             UUIDDatatype                 // A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this system security plan (SSP) elsewhere in this or other OSCAL instances. The locally defined UUID of the SSP can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance).This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.
   2 metadata         Metadata
   3 import-profile   Import-profile
   4 system-characteristics System-characteristics
   5 system-implementation System-implementation
   6 control-implementation Control-implementation
   7 back-matter      Back-matter optional

System-implementation = Record                     // Provides information as to how the system is implemented.
   1 props            Property [0..*]
   2 links            Link [0..*]
   3 leveraged-authorizations System-implementation.leveraged-authorizations-list [0..*]
   4 users            System-user [1..*]
   5 components       System-component [1..*]
   6 inventory-items  Inventory-item [0..*]
   7 remarks          Remarks optional

By-component = Record                              // Defines how the referenced component implements a set of controls.
   1 component-uuid   UUIDDatatype                 // A machine-oriented identifier reference to the component that is implemeting a given control.
   2 uuid             UUIDDatatype                 // A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this by-component entry elsewhere in this or other OSCAL instances. The locally defined UUID of the by-component entry can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.
   3 description      String                       // An implementation statement that describes how a control or a control statement is implemented within the referenced system component.
   4 props            Property [0..*]
   5 links            Link [0..*]
   6 set-parameters   Set-parameter [0..*]
   7 implementation-status Implementation-status optional
   8 export           By-component.export optional // Identifies content intended for external consumption, such as with leveraged organizations.
   9 inherited        By-component.inherited-list [0..*]
  10 satisfied        By-component.satisfied-list [0..*]
  11 responsible-roles Responsible-role [0..*]
  12 remarks          Remarks optional

By-component.export = Record                       // Identifies content intended for external consumption, such as with leveraged organizations.
   1 description      String optional              // An implementation statement that describes the aspects of the control or control statement implementation that can be available to another system leveraging this system.
   2 props            Property [0..*]
   3 links            Link [0..*]
   4 provided         By-component.export.provided-list [0..*]
   5 responsibilities By-component.export.responsibilities-list [0..*]
   6 remarks          Remarks optional

By-component.export.responsibilities-list = ArrayOf(By-component.export.responsibilities){1..*}

By-component.export.responsibilities = Record      // Describes a control implementation responsibility imposed on a leveraging system.
   1 uuid             UUIDDatatype                 // A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this responsibility elsewhere in this or other OSCAL instances. The locally defined UUID of the responsibility can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.
   2 provided-uuid    UUIDDatatype optional        // A machine-oriented identifier reference to an inherited control implementation that a leveraging system is inheriting from a leveraged system.
   3 description      String                       // An implementation statement that describes the aspects of the control or control statement implementation that a leveraging system must implement to satisfy the control provided by a leveraged system.
   4 props            Property [0..*]
   5 links            Link [0..*]
   6 responsible-roles Responsible-role [0..*]
   7 remarks          Remarks optional

By-component.export.provided-list = ArrayOf(By-component.export.provided){1..*}

By-component.export.provided = Record              // Describes a capability which may be inherited by a leveraging system.
   1 uuid             UUIDDatatype                 // A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this provided entry elsewhere in this or other OSCAL instances. The locally defined UUID of the provided entry can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.
   2 description      String                       // An implementation statement that describes the aspects of the control or control statement implementation that can be provided to another system leveraging this system.
   3 props            Property [0..*]
   4 links            Link [0..*]
   5 responsible-roles Responsible-role [0..*]
   6 remarks          Remarks optional

By-component.inherited-list = ArrayOf(By-component.inherited){1..*}

By-component.inherited = Record                    // Describes a control implementation inherited by a leveraging system.
   1 uuid             UUIDDatatype                 // A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this inherited entry elsewhere in this or other OSCAL instances. The locally defined UUID of the inherited control implementation can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.
   2 provided-uuid    UUIDDatatype optional        // A machine-oriented identifier reference to an inherited control implementation that a leveraging system is inheriting from a leveraged system.
   3 description      String                       // An implementation statement that describes the aspects of a control or control statement implementation that a leveraging system is inheriting from a leveraged system.
   4 props            Property [0..*]
   5 links            Link [0..*]
   6 responsible-roles Responsible-role [0..*]

By-component.satisfied-list = ArrayOf(By-component.satisfied){1..*}

By-component.satisfied = Record                    // Describes how this system satisfies a responsibility imposed by a leveraged system.
   1 uuid             UUIDDatatype                 // A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this satisfied control implementation entry elsewhere in this or other OSCAL instances. The locally defined UUID of the control implementation can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.
   2 responsibility-uuid UUIDDatatype optional     // A machine-oriented identifier reference to a control implementation that satisfies a responsibility imposed by a leveraged system.
   3 description      String                       // An implementation statement that describes the aspects of a control or control statement implementation that a leveraging system is implementing based on a requirement from a leveraged system.
   4 props            Property [0..*]
   5 links            Link [0..*]
   6 responsible-roles Responsible-role [0..*]
   7 remarks          Remarks optional

System-characteristics = Record                    // Contains the characteristics of the system, such as its name, purpose, and security impact level.
   1 system-ids       System-id [1..*]
   2 system-name      StringDatatype               // The full name of the system.
   3 system-name-short StringDatatype optional     // A short name for the system, such as an acronym, that is suitable for display in a data table or summary list.
   4 description      String                       // A summary of the system.
   5 props            Property [0..*]
   6 links            Link [0..*]
   7 date-authorized  Date-authorized optional
   8 security-sensitivity-level StringDatatype optional // The overall information system sensitivity categorization, such as defined by FIPS-199.
   9 system-information System-information
  10 security-impact-level Security-impact-level optional
  11 status           Status
  12 authorization-boundary Authorization-boundary
  13 network-architecture Network-architecture optional
  14 data-flow        Data-flow optional
  15 responsible-parties Responsible-party [0..*]
  16 remarks          Remarks optional

Status = Record                                    // Describes the operational status of the system.
   1 state            Status.state                 // The current operating status.
   2 remarks          Remarks optional

Status.state = Choice(allOf)                       // The current operating status.
   1  StringDatatype                               // c1::
   2  Status.state.1                               // c2::

Status.state.1 = Enumerated
   1 operational
   2 under-development
   3 under-major-modification
   4 disposition
   5 other

Data-flow = Record                                 // A description of the logical flow of information within the system and across its boundaries, optionally supplemented by diagrams that illustrate these flows.
   1 description      String                       // A summary of the system's data flow.
   2 props            Property [0..*]
   3 links            Link [0..*]
   4 diagrams         Diagram [0..*]
   5 remarks          Remarks optional

Diagram = Record                                   // A graphic that provides a visual representation the system, or some aspect of it.
   1 uuid             UUIDDatatype                 // A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this diagram elsewhere in this or other OSCAL instances. The locally defined UUID of the diagram can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.
   2 description      String optional              // A summary of the diagram.
   3 props            Property [0..*]
   4 links            Link [0..*]
   5 caption          String optional              // A brief caption to annotate the diagram.
   6 remarks          Remarks optional

System-information = Record                        // Contains details about all information types that are stored, processed, or transmitted by the system, such as privacy information, and those defined in NIST SP 800-60.
   1 props            Property [0..*]
   2 links            Link [0..*]
   3 information-types System-information.information-types-list [1..*]

System-information.information-types-list = ArrayOf(System-information.information-types){1..*}

System-information.information-types = Record      // Contains details about one information type that is stored, processed, or transmitted by the system, such as privacy information, and those defined in NIST SP 800-60.
   1 uuid             UUIDDatatype optional        // A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this information type elsewhere in this or other OSCAL instances. The locally defined UUID of the information type can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.
   2 title            String                       // A human readable name for the information type. This title should be meaningful within the context of the system.
   3 description      String                       // A summary of how this information type is used within the system.
   4 categorizations  System-information.information-types.categorizations-list [0..*]
   5 props            Property [0..*]
   6 links            Link [0..*]
   7 confidentiality-impact Impact optional
   8 integrity-impact Impact optional
   9 availability-impact Impact optional

System-information.information-types.categorizations-list = ArrayOf(System-information.information-types.categorizations){1..*}

System-information.information-types.categorizations = Record // A set of information type identifiers qualified by the given identification system used, such as NIST SP 800-60.
   1 system           System-information.information-types.categorizations.system // Specifies the information type identification system used.
   2 information-type-ids StringDatatype [0..*]

System-information.information-types.categorizations.system = Choice(anyOf) // Specifies the information type identification system used.
   1  URIDatatype                                  // c1::
   2  System-information.information-types.categorizations.system.1 // c2::

System-information.information-types.categorizations.system.1 = Enumerated
   1 http://doi.org/10.6028/NIST.SP.800-60v2r1

Impact = Record                                    // The expected level of impact resulting from the described information.
   1 props            Property [0..*]
   2 links            Link [0..*]
   3 base             Base
   4 selected         Selected optional
   5 adjustment-justification Adjustment-justification optional

Base = Choice(allOf)                               // The prescribed base (Confidentiality, Integrity, or Availability) security impact level.
   1  StringDatatype                               // alias::

Selected = Choice(allOf)                           // The selected (Confidentiality, Integrity, or Availability) security impact level.
   1  StringDatatype                               // alias::

Authorization-boundary = Record                    // A description of this system's authorization boundary, optionally supplemented by diagrams that illustrate the authorization boundary.
   1 description      String                       // A summary of the system's authorization boundary.
   2 props            Property [0..*]
   3 links            Link [0..*]
   4 diagrams         Diagram [0..*]
   5 remarks          Remarks optional

Network-architecture = Record                      // A description of the system's network architecture, optionally supplemented by diagrams that illustrate the network architecture.
   1 description      String                       // A summary of the system's network architecture.
   2 props            Property [0..*]
   3 links            Link [0..*]
   4 diagrams         Diagram [0..*]
   5 remarks          Remarks optional

Security-impact-level = Record                     // The overall level of expected impact resulting from unauthorized disclosure, modification, or loss of access to information.
   1 security-objective-confidentiality StringDatatype // A target-level of confidentiality for the system, based on the sensitivity of information within the system.
   2 security-objective-integrity StringDatatype   // A target-level of integrity for the system, based on the sensitivity of information within the system.
   3 security-objective-availability StringDatatype // A target-level of availability for the system, based on the sensitivity of information within the system.
